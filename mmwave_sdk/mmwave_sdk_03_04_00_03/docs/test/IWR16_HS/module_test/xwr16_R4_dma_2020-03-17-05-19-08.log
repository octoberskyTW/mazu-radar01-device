mss in binary >>> xwr16xx_dma_mss.xer4f
eth008 Board details:
IP address: 10.218.113.67

Port: 17494

connecting...
Relay states 8->1 : 01000001
1 off
2 off
Relay states 8->1 : 01000000
1 on
Relay states 8->1 : 01000001
exit
Disconnected
Pre-Script returned: Success
**************************************************
Testcase mods & parameters invoked:
**************************************************
Two core test case: None (this is not a two core testcase)

**************************************************
Copying test case files from the Build server
**************************************************
Testdata possible location 1: http://gtjenkins.itg.ti.com/nightly_builds/mmwave_sdk-dev/261-2020-03-16_19-52-08/artifacts/test/mmwave_sdk/packages/ti/drivers/dma/test/testdata


Testdata directory was not found on Testdata possible location 1


Testdata possible location 2: http://gtjenkins.itg.ti.com/nightly_builds/mmwave_sdk-dev/261-2020-03-16_19-52-08/artifacts/test/mmwave_sdk/packages/ti/drivers/dma/test/xwr16xx/testdata


Testdata directory was not found on Testdata possible location 2

Call to copy_testcase_binary:
TCP: http://gtjenkins.itg.ti.com/nightly_builds/mmwave_sdk-dev/261-2020-03-16_19-52-08/artifacts/test/mmwave_sdk/packages/ti/drivers/dma/test/xwr16xx; /home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24

Copying testcase binary file from http://gtjenkins.itg.ti.com/nightly_builds/mmwave_sdk-dev/261-2020-03-16_19-52-08/artifacts/test/mmwave_sdk/packages/ti/drivers/dma/test/xwr16xx/xwr16xx_dma_mss.xer4f to /home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24 using command: 
wget -e robots=off --no-proxy -N -T 30 -t 2 -P /home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24 http://gtjenkins.itg.ti.com/nightly_builds/mmwave_sdk-dev/261-2020-03-16_19-52-08/artifacts/test/mmwave_sdk/packages/ti/drivers/dma/test/xwr16xx/xwr16xx_dma_mss.xer4f
**************************************************
Executing Testcase:/home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24/xwr16xx_dma_mss.xer4f
**************************************************
Checking if Py4J Gateway server has started...
Py4J Gateway Server is Started
amk: a path in cpuList is Texas Instruments XDS110 USB Debug Probe_0/DEBUGSSM_0
amk: a path in cpuList is Texas Instruments XDS110 USB Debug Probe_0/CS_DAP_0
amk: a path in cpuList is Texas Instruments XDS110 USB Debug Probe_0/Cortex_R4_0
DSS test case opening debug session.

cr4ctl = 0xadad00

Loading binary to the DUT (no binary args updated):/home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24/xwr16xx_dma_mss.xer4f
binary path = /home/lte_phy/ti/mcpi_tf/mcpi_testframework_1_12_00_01/test/temp/mmWave_SDK___hs_iwr16xx_sdk03.04.00_Test_Plan___mmwave-sdk-03-04-00-2020-03-17-05-03-24_2020_03_17_03_03_24/xwr16xx_dma_mss.xer4f

total CCS time = 89


**************************************************
CIO Log captured for the testcase
**************************************************
Debug: Launching BIOS 
Debug: DMA has been initialized
Feature: DMA_open: Passed
Debug: DMA Instance (0) has been opened successfully (handle: @080011e8)
Debug: DMA Instance @080011e8 has been closed err:0
Feature: DMA_close: Passed
Feature: DMA_open: Passed
Debug: DMA Instance @080011e8 has been reopened successfully
********************************************************
Start Test 1 (DMA0): Frame trigger transfer 
********************************************************
Debug: Trigger channel ch:1 for loop#0
Debug: Trigger channel ch:1 for loop#1
Debug: Trigger channel ch:1 for loop#2
Debug: Trigger channel ch:1 for loop#3
Debug: Trigger channel ch:1 for loop#4
Debug: Trigger channel ch:1 for loop#5
Debug: Trigger channel ch:1 for loop#6
Debug: Trigger channel ch:1 for loop#7
Debug: Trigger channel ch:1 for loop#8
Debug: Trigger channel ch:1 for loop#9
Feature: Frame trigger transfer: Passed
********************************************************
Start Test 2 (DMA0): Block trigger transfer 
********************************************************
Debug: Trigger channel ch:2 for loop#0
Feature: Block trigger transfer: Passed
********************************************************
Start Test 3 (DMA0): Frame trigger transfer (Constant - Constant) 
********************************************************
Debug: Trigger channel ch:3 for loop#0
Debug: Trigger channel ch:3 for loop#1
Debug: Trigger channel ch:3 for loop#2
Debug: Trigger channel ch:3 for loop#3
Debug: Trigger channel ch:3 for loop#4
Debug: Trigger channel ch:3 for loop#5
Debug: Trigger channel ch:3 for loop#6
Debug: Trigger channel ch:3 for loop#7
Debug: Trigger channel ch:3 for loop#8
Debug: Trigger channel ch:3 for loop#9
Feature: Frame trigger transfer (Constant - Constant): Passed
********************************************************
Start Test 4 (DMA0): Frame trigger transfer (Constant - Incr) 
********************************************************
Debug: Trigger channel ch:4 for loop#0
Debug: Trigger channel ch:4 for loop#1
Debug: Trigger channel ch:4 for loop#2
Debug: Trigger channel ch:4 for loop#3
Debug: Trigger channel ch:4 for loop#4
Debug: Trigger channel ch:4 for loop#5
Debug: Trigger channel ch:4 for loop#6
Debug: Trigger channel ch:4 for loop#7
Debug: Trigger channel ch:4 for loop#8
Debug: Trigger channel ch:4 for loop#9
Feature: Frame trigger transfer (Constant - Incr): Passed
********************************************************
Start Test 5 (DMA0): Frame trigger transfer (Constant - Indexed) 
********************************************************
Debug: Trigger channel ch:5 for loop#0
Debug: Trigger channel ch:5 for loop#1
Debug: Trigger channel ch:5 for loop#2
Debug: Trigger channel ch:5 for loop#3
Debug: Trigger channel ch:5 for loop#4
Debug: Trigger channel ch:5 for loop#5
Feature: Frame trigger transfer (Constant - Indexed): Passed
********************************************************
Start Test 6 (DMA0): Frame trigger transfer (Incr - Constant) 
********************************************************
Debug: Trigger channel ch:6 for loop#0
Debug: Trigger channel ch:6 for loop#1
Debug: Trigger channel ch:6 for loop#2
Debug: Trigger channel ch:6 for loop#3
Debug: Trigger channel ch:6 for loop#4
Feature: Frame trigger transfer (Incr - Constant): Passed
********************************************************
Start Test 7 (DMA0): Frame trigger transfer (Incr - Incr) 
********************************************************
Debug: Trigger channel ch:7 for loop#0
Debug: Trigger channel ch:7 for loop#1
Feature: Frame trigger transfer (Incr - Incr): Passed
********************************************************
Start Test 8 (DMA0): Frame trigger transfer (Incr - Indexed) 
********************************************************
Debug: Trigger channel ch:8 for loop#0
Debug: Trigger channel ch:8 for loop#1
Feature: Frame trigger transfer (Incr - Indexed): Passed
********************************************************
Start Test 9 (DMA0): Frame trigger transfer (Indexed - constant) 
********************************************************
Feature: Frame trigger transfer (Indexed - constant): Passed
********************************************************
Start Test 10 (DMA0): Frame trigger transfer (Indexed - Incr) 
********************************************************
Debug: Trigger channel ch:11 for loop#0
Debug: Trigger channel ch:11 for loop#1
Debug: Trigger channel ch:11 for loop#2
Debug: Trigger channel ch:11 for loop#3
Feature: Frame trigger transfer (Indexed - Incr): Passed
********************************************************
Start Test 11 (DMA0): Frame trigger transfer (Indexed - Indexed) 
********************************************************
Debug: Trigger channel ch:12 for loop#0
Debug: Trigger channel ch:12 for loop#1
Debug: Trigger channel ch:12 for loop#2
Feature: Frame trigger transfer (Indexed - Indexed): Passed
********************************************************
Start Test 12 (DMA0): Channel Chaining 
********************************************************
Debug: Trigger channel ch:13 for loop#0
Debug: Trigger channel ch:14 for loop#0
Debug: Trigger channel ch:15 for loop#0
Feature: Channel Chaining: Passed
********************************************************
Start Test 13 (DMA0): Parameter error checking tests 
********************************************************
Feature: Check error code for invalid element xfer cnt : Passed
Feature: Check error code for invalid frame xfer cnt : Passed
Feature: Check error code for invalid chained channel : Passed
Feature: Check error code for invalid channel number : Passed
Feature: Check error code for invalid src element index offset : Passed
Feature: Check error code for invalid src frame index offset : Passed
Feature: Check error code for invalid dest element index offset : Passed
Feature: Check error code for invalid dest frame index offset : Passed
Feature: Check error code for unaligned src addr : Passed
Feature: Check error code for unaligned dest addr : Passed
********************************************************
Start Test 14 (DMA0): Bus error checking tests 
********************************************************
Feature: Check BER interrupt : Passed
Feature: Check BER polling flag : Passed
********************************************************
Start Test 15 (DMA0): Benchmarking tests (interrupt based) 
********************************************************
BufferSize,8-bit xfer,16-bit xfer,32-bit xfer,64-bit xfer
1,850,,,,
2,856,843,,,
4,870,851,838,,
8,919,889,837,838,
16,912,882,882,837,
32,1177,895,879,838,
64,1460,1140,892,850,
128,2324,1480,1137,720,
256,4009,2312,1459,899,
512,7417,4024,2312,1137,
1024,14194,7416,4010,1376,
2048,27776,14184,7404,2146,
4096,54889,27745,14188,3687,
8192,,54874,27761,6775,
Feature: Benchmarking tests (interrupt based): Passed
********************************************************
Start Test 16 (DMA0): Benchmarking tests (polling based) 
********************************************************
BufferSize,8-bit xfer,16-bit xfer,32-bit xfer,64-bit xfer
1,256,,,,
2,256,198,,,
4,223,206,206,,
8,223,206,206,191,
16,374,206,206,191,
32,525,337,206,191,
64,963,581,345,191,
128,1867,1495,597,191,
256,3562,1824,936,322,
512,6936,3519,1840,453,
1024,13716,6909,3535,905,
2048,27276,13689,6925,1583,
4096,54396,27249,13705,3165,
8192,,54390,27232,6226,
Feature: Benchmarking tests (polling based): Passed
Debug: DMA Instance @080011e8 has been closed err:0
Feature: DMA_close: Passed
Feature: DMA_open: Passed
Debug: DMA Instance (1) has been opened successfully (handle: @080011e8)
Debug: DMA Instance @080011e8 has been closed err:0
Feature: DMA_close: Passed
Feature: DMA_open: Passed
Debug: DMA Instance @080011e8 has been reopened successfully
********************************************************
Start Test 1 (DMA1): Frame trigger transfer 
********************************************************
Debug: Trigger channel ch:1 for loop#0
Debug: Trigger channel ch:1 for loop#1
Debug: Trigger channel ch:1 for loop#2
Debug: Trigger channel ch:1 for loop#3
Debug: Trigger channel ch:1 for loop#4
Debug: Trigger channel ch:1 for loop#5
Debug: Trigger channel ch:1 for loop#6
Debug: Trigger channel ch:1 for loop#7
Debug: Trigger channel ch:1 for loop#8
Debug: Trigger channel ch:1 for loop#9
Feature: Frame trigger transfer: Passed
********************************************************
Start Test 2 (DMA1): Block trigger transfer 
********************************************************
Debug: Trigger channel ch:2 for loop#0
Feature: Block trigger transfer: Passed
********************************************************
Start Test 3 (DMA1): Frame trigger transfer (Constant - Constant) 
********************************************************
Debug: Trigger channel ch:3 for loop#0
Debug: Trigger channel ch:3 for loop#1
Debug: Trigger channel ch:3 for loop#2
Debug: Trigger channel ch:3 for loop#3
Debug: Trigger channel ch:3 for loop#4
Debug: Trigger channel ch:3 for loop#5
Debug: Trigger channel ch:3 for loop#6
Debug: Trigger channel ch:3 for loop#7
Debug: Trigger channel ch:3 for loop#8
Debug: Trigger channel ch:3 for loop#9
Feature: Frame trigger transfer (Constant - Constant): Passed
********************************************************
Start Test 4 (DMA1): Frame trigger transfer (Constant - Incr) 
********************************************************
Debug: Trigger channel ch:4 for loop#0
Debug: Trigger channel ch:4 for loop#1
Debug: Trigger channel ch:4 for loop#2
Debug: Trigger channel ch:4 for loop#3
Debug: Trigger channel ch:4 for loop#4
Debug: Trigger channel ch:4 for loop#5
Debug: Trigger channel ch:4 for loop#6
Debug: Trigger channel ch:4 for loop#7
Debug: Trigger channel ch:4 for loop#8
Debug: Trigger channel ch:4 for loop#9
Feature: Frame trigger transfer (Constant - Incr): Passed
********************************************************
Start Test 5 (DMA1): Frame trigger transfer (Constant - Indexed) 
********************************************************
Debug: Trigger channel ch:5 for loop#0
Debug: Trigger channel ch:5 for loop#1
Debug: Trigger channel ch:5 for loop#2
Debug: Trigger channel ch:5 for loop#3
Debug: Trigger channel ch:5 for loop#4
Debug: Trigger channel ch:5 for loop#5
Feature: Frame trigger transfer (Constant - Indexed): Passed
********************************************************
Start Test 6 (DMA1): Frame trigger transfer (Incr - Constant) 
********************************************************
Debug: Trigger channel ch:6 for loop#0
Debug: Trigger channel ch:6 for loop#1
Debug: Trigger channel ch:6 for loop#2
Debug: Trigger channel ch:6 for loop#3
Debug: Trigger channel ch:6 for loop#4
Feature: Frame trigger transfer (Incr - Constant): Passed
********************************************************
Start Test 7 (DMA1): Frame trigger transfer (Incr - Incr) 
********************************************************
Debug: Trigger channel ch:7 for loop#0
Debug: Trigger channel ch:7 for loop#1
Feature: Frame trigger transfer (Incr - Incr): Passed
********************************************************
Start Test 8 (DMA1): Frame trigger transfer (Incr - Indexed) 
********************************************************
Debug: Trigger channel ch:8 for loop#0
Debug: Trigger channel ch:8 for loop#1
Feature: Frame trigger transfer (Incr - Indexed): Passed
********************************************************
Start Test 9 (DMA1): Frame trigger transfer (Indexed - constant) 
********************************************************
Feature: Frame trigger transfer (Indexed - constant): Passed
********************************************************
Start Test 10 (DMA1): Frame trigger transfer (Indexed - Incr) 
********************************************************
Debug: Trigger channel ch:11 for loop#0
Debug: Trigger channel ch:11 for loop#1
Debug: Trigger channel ch:11 for loop#2
Debug: Trigger channel ch:11 for loop#3
Feature: Frame trigger transfer (Indexed - Incr): Passed
********************************************************
Start Test 11 (DMA1): Frame trigger transfer (Indexed - Indexed) 
********************************************************
Debug: Trigger channel ch:12 for loop#0
Debug: Trigger channel ch:12 for loop#1
Debug: Trigger channel ch:12 for loop#2
Feature: Frame trigger transfer (Indexed - Indexed): Passed
********************************************************
Start Test 12 (DMA1): Channel Chaining 
********************************************************
Debug: Trigger channel ch:13 for loop#0
Debug: Trigger channel ch:14 for loop#0
Debug: Trigger channel ch:15 for loop#0
Feature: Channel Chaining: Passed
********************************************************
Start Test 13 (DMA1): Parameter error checking tests 
********************************************************
Feature: Check error code for invalid element xfer cnt : Passed
Feature: Check error code for invalid frame xfer cnt : Passed
Feature: Check error code for invalid chained channel : Passed
Feature: Check error code for invalid channel number : Passed
Feature: Check error code for invalid src element index offset : Passed
Feature: Check error code for invalid src frame index offset : Passed
Feature: Check error code for invalid dest element index offset : Passed
Feature: Check error code for invalid dest frame index offset : Passed
Feature: Check error code for unaligned src addr : Passed
Feature: Check error code for unaligned dest addr : Passed
********************************************************
Start Test 14 (DMA1): Bus error checking tests 
********************************************************
Feature: Check BER interrupt : Passed
Feature: Check BER polling flag : Passed
********************************************************
Start Test 15 (DMA1): Benchmarking tests (interrupt based) 
********************************************************
BufferSize,8-bit xfer,16-bit xfer,32-bit xfer,64-bit xfer
1,850,,,,
2,856,843,,,
4,870,851,838,,
8,919,889,837,838,
16,912,882,882,837,
32,1177,895,879,838,
64,1460,1140,892,850,
128,2322,1480,1137,720,
256,4009,2312,1459,899,
512,7410,4024,2328,1158,
1024,14194,7400,4024,1371,
2048,27753,14186,7405,2144,
4096,54898,27754,14186,3682,
8192,,54883,27738,6752,
Feature: Benchmarking tests (interrupt based): Passed
********************************************************
Start Test 16 (DMA1): Benchmarking tests (polling based) 
********************************************************
BufferSize,8-bit xfer,16-bit xfer,32-bit xfer,64-bit xfer
1,256,,,,
2,256,191,,,
4,223,206,206,,
8,223,206,206,191,
16,374,206,206,191,
32,525,337,206,191,
64,963,581,345,191,
128,1867,920,597,191,
256,3562,1824,936,322,
512,6936,3519,1835,453,
1024,13716,6909,3535,905,
2048,28185,13689,6925,1583,
4096,54401,27249,13700,3165,
8192,,54381,27260,6216,
Feature: Benchmarking tests (polling based): Passed
Debug: DMA Instance @080011e8 has been closed err:0
Feature: DMA_close: Passed
Value read from Global variable (MCPI_Result): 0
Test Failure Signature: 0
Test Log Messages: 
Feature tested: DMA_open: Passed
Feature tested: DMA_close: Passed
Feature tested: DMA_open: Passed
Feature tested: Frame trigger transfer: Passed
Feature tested: Block trigger transfer: Passed
Feature tested: Frame trigger transfer (Constant - Constant): Passed
Feature tested: Frame trigger transfer (Constant - Incr): Passed
Feature tested: Frame trigger transfer (Constant - Indexed): Passed
Feature tested: Frame trigger transfer (Incr - Constant): Passed
Feature tested: Frame trigger transfer (Incr - Incr): Passed
Feature tested: Frame trigger transfer (Incr - Indexed): Passed
Feature tested: Frame trigger transfer (Indexed - constant): Passed
Feature tested: Frame trigger transfer (Indexed - Incr): Passed
Feature tested: Frame trigger transfer (Indexed - Indexed): Passed
Feature tested: Channel Chaining: Passed
Feature tested: Check error code for invalid element xfer cnt : Passed
Feature tested: Check error code for invalid frame xfer cnt : Passed
Feature tested: Check error code for invalid chained channel : Passed
Feature tested: Check error code for invalid channel number : Passed
Feature tested: Check error code for invalid src element index offset : Passed
Feature tested: Check error code for invalid src frame index offset : Passed
Feature tested: Check error code for invalid dest element index offset : Passed
Feature tested: Check error code for invalid dest frame index offset : Passed
Feature tested: Check error code for unaligned src addr : Passed
Feature tested: Check error code for unaligned dest addr : Passed
Feature tested: Check BER interrupt : Passed
Feature tested: Check BER polling flag : Passed
Feature tested: Benchmarking tests (interrupt based): Passed
Feature tested: Benchmarking tests (polling based): Passed
Feature tested: DMA_close: Passed
Feature tested: DMA_open: Passed
Feature tested: DMA_close: Passed
Feature tested: DMA_open: Passed
Feature tested: Frame trigger transfer: Passed
Feature tested: Block trigger transfer: Passed
Feature tested: Frame trigger transfer (Constant - Constant): Passed
Feature tested: Frame trigger transfer (Constant - Incr): Passed
Feature tested: Frame trigger transfer (Constant - Indexed): Passed
Feature tested: Frame trigger transfer (Incr - Constant): Passed
Feature tested: Frame trigger transfer (Incr - Incr): Passed
Feature tested: Frame trigger transfer (Incr - Indexed): Passed
Feature tested: Frame trigger transfer (Indexed - constant): Passed
Feature tested: Frame trigger transfer (Indexed - Incr): Passed
Feature tested: Frame trigger transfer (Indexed - Indexed): Passed
Feature tested: Channel Chaining: Passed
Feature tested: Check error code for invalid element xfer cnt : Passed
Feature tested: Check error code for invalid frame xfer cnt : Passed
Feature tested: Check error code for invalid chained channel : Passed
Feature tested: Check error code for invalid channel number : Passed
Feature tested: Check error code for invalid src element index offset : Passed
Feature tested: Check error code for invalid src frame index offset : Passed
Feature tested: Check error code for invalid dest element index offset : Passed
Feature tested: Check error code for invalid dest frame index offset : Passed
Feature tested: Check error code for unaligned src addr : Passed
Feature tested: Check error code for unaligned dest addr : Passed
Feature tested: Check BER interrupt : Passed
Feature tested: Check BER polling flag : Passed
Feature tested: Benchmarking tests (interrupt based): Passed
Feature tested: Benchmarking tests (polling based): Passed
Feature tested: DMA_close: Passed


shutting down py4j gw server.


**************************************************
Terminating the debug session and Shutting down gateway.
**************************************************

**************************************************
Test case execution completed
**************************************************

**************************************************
Testcase Result : PASS
**************************************************
