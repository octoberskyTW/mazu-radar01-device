/*!
 * File generated by platform wizard. DO NOT MODIFY
 *
 */

metaonly module Platform inherits xdc.platform.IPlatform {

    config ti.platforms.generic.Platform.Instance CPU =
        ti.platforms.generic.Platform.create("CPU", {
            clockRate:      `this.platformSchema.cpuCore.clockRate`,                                       
            catalogName:    "`this.platformSchema.cpuCore.catalogName`",
            deviceName:     "`this.platformSchema.cpuCore.deviceName`",
%if (this.platformSchema.customMemoryMap)          
            customMemoryMap:
% else
            externalMemoryMap: 
           [          
%for(var j = 0; j < this.platformSchema.memMapArray.length; j++) {
%    var memMapElem =  this.platformSchema.memMapArray[j];
                ["`memMapElem.name`", 
                     {
%    for (var key in memMapElem) {
%        if (memMapElem[key] == undefined) {
%            continue;    
%        }
%        if ((key == "base") || (key == "len")) {
                        `key`: `memMapElem[key]`,                    
%        }
%        else {
                        `key`: "`memMapElem[key]`",
         %}
%    }
                     }
                ],
%}       
           ],
%for(var k = 0; k < this.platformSchema.cpuCore.register.length; k++) {
          `this.platformSchema.cpuCore.register[k].name`: "`this.platformSchema.cpuCore.register[k].value`",
%}

    });
    
instance :
    
    override config string codeMemory  = "`this.platformSchema.cpuCore.codeMemory`";   
    override config string dataMemory  = "`this.platformSchema.cpuCore.dataMemory`";                                
    override config string stackMemory = "`this.platformSchema.cpuCore.stackMemory`";

%/* 'register' object in platformSchema.cpuCore contains only C6000 cache
% * settings, so we know these are config String parameters.
% */
%for(var k = 0; k < this.platformSchema.cpuCore.register.length; k++) {
    config String `this.platformSchema.cpuCore.register[k].name` = "`this.platformSchema.cpuCore.register[k].value`";
%}
}
