;
;  Copyright (c) 2015-2016, Texas Instruments Incorporated
;  All rights reserved.
; 
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
; 
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
; 
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
; 
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
;
; ======== Core_asm.asm ========
;
;

        .cdecls C,NOLIST,"package/internal/Core.xdc.h" 

        .thumb

        .global ti_sysbios_family_arm_ducati_Core_reset
        .global ti_sysbios_family_arm_ducati_Core_core1WaitFlag

        .sect   ".ducatiBoot"

        ; reset vectors
vecbase:
        .long   0               ; sp = not used
        .long   ti_sysbios_family_arm_ducati_Core_reset

        .thumbfunc ti_sysbios_family_arm_ducati_Core_reset
ti_sysbios_family_arm_ducati_Core_reset:
        .asmfunc
        ldr     r0, coreid      ; point to coreid reg
        ldr     r0, [r0]        ; read coreid
        cmp     r0, #0
        bne     core1

core0:
        ; hold core 1 off
        ldr     r0, waitFlagAddr
        mov     r1, #1
        str     r1, [r0]

        ; Core 0 jumps to _c_int00 immediately
        ldr     lr, reset0
        ldr     lr, [lr]        ; read core 0 reset vector
        bx      lr              ; jump to core0's c_int00


core1:
        ; Core 1 stalls 100 cycles to give core 0 a chance
        ; to write to the waitFlag
        mov     r0, #100

core1Stall:
        subs    r0, r0, #1
        bne     core1Stall

        ; Core 1 waits until core 0 initializes the system
core1Wait:
        ldr     r0, local_ti_sysbios_family_arm_ducati_Core_core1WaitFlag
        cmp     r0, #0
        bne     core1Wait

        ldr     lr, reset1
        ldr     lr, [lr]        ; read core 1 reset vector
        bx      lr              ; jump to core1's c_int00

coreid: .word   0xE00FFFE0

;
; if core 0 is present, it will set the waitFlag to 1 immediately
; and then clear it just before main.
;
; in systems with only core 1, no wait will occur
;

ti_sysbios_family_arm_ducati_Core_core1WaitFlag:
local_ti_sysbios_family_arm_ducati_Core_core1WaitFlag:
        .word   0

waitFlagAddr:
        .word   ti_sysbios_family_arm_ducati_Core_core1WaitFlag

reset0: .word   0x00000404      ; reset vector addr for core 0

reset1: .word   0x00000804      ; reset vector addr for core 1

        .endasmfunc

        .end


