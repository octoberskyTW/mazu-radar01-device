;
;  Copyright (c) 2015, Texas Instruments Incorporated
;  All rights reserved.
;
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions
;  are met:
;
;  *  Redistributions of source code must retain the above copyright
;     notice, this list of conditions and the following disclaimer.
;
;  *  Redistributions in binary form must reproduce the above copyright
;     notice, this list of conditions and the following disclaimer in the
;     documentation and/or other materials provided with the distribution.
;
;  *  Neither the name of Texas Instruments Incorporated nor the names of
;     its contributors may be used to endorse or promote products derived
;     from this software without specific prior written permission.
;
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
;  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
;  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
;  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
;  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
;  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
;  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;
;
; ======== Power_resume.s66 ========
;
;
    .if $isdefed("__TI_ELFABI__")
    .if __TI_ELFABI__
        .asg ti_sysbios_family_c66_vayu_Power_resetFxn__I, _ti_sysbios_family_c66_vayu_Power_resetFxn__I
        .asg ti_sysbios_family_c66_vayu_Power_doResume, _ti_sysbios_family_c66_vayu_Power_doResume
        .asg ti_sysbios_family_c66_vayu_Power_readyIdle, _ti_sysbios_family_c66_vayu_Power_readyIdle
        .asg ti_sysbios_family_c66_vayu_Power_cpuRegs, _ti_sysbios_family_c66_vayu_Power_cpuRegs
    .endif
    .endif

        .global _ti_sysbios_family_c66_vayu_Power_resetFxn__I
        .global _ti_sysbios_family_c66_vayu_Power_doResume
        .global _ti_sysbios_family_c66_vayu_Power_readyIdle
        .global _ti_sysbios_family_c66_vayu_Power_cpuRegs


;
;  ======== Power_resetFxn ========
;
;  Power_resetFxn()
;
        .sect ".text:ti_sysbios_family_c66_vayu_Power_code"
        .clink
        .nocmp

_ti_sysbios_family_c66_vayu_Power_resetFxn__I:
        .asmfunc

        ; load the doResume flag and the CPU reg context pointer
        mvkl _ti_sysbios_family_c66_vayu_Power_doResume, a0
        mvkh _ti_sysbios_family_c66_vayu_Power_doResume, a0
        ldw *a0, a1
        mvkl _ti_sysbios_family_c66_vayu_Power_cpuRegs, a2
        mvkh _ti_sysbios_family_c66_vayu_Power_cpuRegs, a2
        nop 2

        ; if doResume flag is zero: not resuming from suspend, just return now
  [!a1] b b3

        ; else: resuming, now load CPU registers from saved context
  [a1]  lddw *a2++, a15:a14     ; restore A15-A10
  [a1]  lddw *a2++, a13:a12
  [a1]  lddw *a2++, a11:a10
  [a1]  lddw *a2++, b15:b14     ; restore B15-B10
  [a1]  lddw *a2++, b13:b12
        lddw *a2++, b11:b10
        ldw  *a2, b3            ; restore B3
        nop 3

        ; set return code to indicate: yes, resuming from reset
        mvk 1, a4

        ; return back *into* the Power_suspend API...
        b b3
        nop 5


        .endasmfunc

        .sect ".text:ti_sysbios_family_c66_vayu_Power_data"
        .align  4

; global flag to tell above reset function whether to resume, or to do nothing
_ti_sysbios_family_c66_vayu_Power_doResume    .word 0

; global flag to tell MPU that DSP is about to invoke IDLE
_ti_sysbios_family_c66_vayu_Power_readyIdle   .word 0

        .align  8
; saved child-preserved registers (A10-A15 and B10-B15), and B3 return pointer
_ti_sysbios_family_c66_vayu_Power_cpuRegs     .word 0,0,0,0,0,0,0,0,0,0,0,0,0
